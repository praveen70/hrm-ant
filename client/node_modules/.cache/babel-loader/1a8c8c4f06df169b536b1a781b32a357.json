{"ast":null,"code":"import _objectWithoutProperties from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/praveen/Documents/Praveen-codes/HRM/client/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./component/login/login\";\nimport Home from \"./component/dashboard/home/home\"; //import CreateEmployee from './component/createEmployee/createEmployee'\n\nimport Addemployee from \"./component/dashboard/addEmployee/addEmployee\";\nimport withSession from \"./component/withSession\";\nimport Employee from \"./component/dashboard/createEmployee/index\";\nimport Professionalinformation from \"./component/dashboard/employeeProfessionalInfo/index\";\nimport Educationinformation from \"./component/dashboard/employeeEducationInformation/index\";\nimport Documents from \"./component/dashboard/documents/index\";\nimport Employetable from './component/dashboard/allEmployeTable/index';\nimport Delete from './component/dashboard/deleteEmployee/index';\nimport Updateemployee from './component/dashboard/updateEmployee/index';\nimport Allemployee from './component/dashboard/defaultPage/index';\nimport Rollbased from './component/dashboard/rollBased/rollBased';\nimport Auth from './Auth';\nimport decode from 'jwt-decode'; // import Layout from './layout/index'\n\nvar checkAuth = function checkAuth() {\n  var token = localStorage.getItem('token');\n  console.log(\"i am token \", token);\n  var refreshToken = localStorage.getItem('refreshToken');\n\n  if (!token || !refreshToken) {\n    return false;\n  }\n\n  try {\n    // { exp: 12903819203 }\n    var _decode = decode(refreshToken),\n        exp = _decode.exp;\n\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\nvar AuthRoute = function AuthRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return checkAuth() ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n}; // const fakeAuth = {\n//   isAuthenticated: true,\n//   authenticate(cb){\n//     this.isAuthenticated = true\n//     setTimeout(cb, 100)\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false\n//     setTimeout(cb, 100)\n//   }\n// }\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render = {(props) => (\n//     fakeAuth.isAuthenticated === true ? <Component {...props} /> : <Redirect to ={{\n//       pathname: '/',\n//       state:{ from: props.location }\n//     }} />\n//   )} />\n// )\n// class Root extends React.Component {\n//   // state = {\n//   //   loggedIn:false\n//   // }\n//   // loginHandle = () => {\n//   //   this.setState(prevState => ({\n//   //    loggedIn: !prevState.loggedIn\n//   //   }))\n//   // }\n//   render() {\n//     return (\n//       <div>\n//       <Router>\n//         <Switch>\n//           <Route exact path = \"/\" component={Login}  />\n//           {/* <PrivateRoute path = '/home' component={Home} /> */}\n//         {/*<AuthRoute exact path=\"/Auth\" component={Auth} />*/}\n//           <Route path ='/home' component={Home} />\n//           {/* <Route path=\"/home\" render={()=>(\n//           this.state.loggedIn ? ( <Home />) : (<Redirect to='/' />)  /> */}\n//           {/* <Route path=\"/home\" render={({match})=>(this.state.loggedIn ? ( <Home username={match.params.username} />) : (<Redirect to='/' />))}/> */}\n//           <Route path=\"/createEmployee\" component={Employee} />\n//           <Route path=\"/addEmployee\" render={() => <Addemployee />} />\n//           <Route path=\"/employeeProfessionalInfo\"\n//             render={() => <Professionalinformation />}\n//           />\n//           <Route path=\"/employeeEducationInformation\"\n//             render={() => <Educationinformation />}\n//           />\n//           <Route path=\"/documents\" render={() => <Documents />} />\n//           <Route path=\"/allEmployeeTable\" render={() => <Employetable />} />\n//           <Route path=\"/deleteEmployee:_id\" component={Delete} />\n//           <Route path=\"/updateEmployee/:_id\" component={Updateemployee} />\n//           <Route path=\"/defaultPage\" render={() => <Allemployee />} />\n//           <Route path=\"/rollBased\" component={Rollbased} />\n//         </Switch>\n//       </Router>\n//     </div>\n//     );\n//   }\n// }\n\n\nvar Root = function Root(_ref2) {\n  var refetch = _ref2.refetch,\n      session = _ref2.session;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: function render() {\n      return React.createElement(Login, {\n        refetch: refetch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/createEmployee\",\n    component: Employee,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addEmployee\",\n    render: function render() {\n      return React.createElement(Addemployee, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/employeeProfessionalInfo\",\n    render: function render() {\n      return React.createElement(Professionalinformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/employeeEducationInformation\",\n    render: function render() {\n      return React.createElement(Educationinformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/documents\",\n    render: function render() {\n      return React.createElement(Documents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/allEmployeeTable\",\n    render: function render() {\n      return React.createElement(Employetable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/deleteEmployee:_id\",\n    component: Delete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/updateEmployee/:_id\",\n    component: Updateemployee,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/defaultPage\",\n    render: function render() {\n      return React.createElement(Allemployee, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/rollBased\",\n    component: Rollbased,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))));\n}; //const RootWithSession = withSession(Root);\n\n\nexport default withSession(Root);","map":{"version":3,"sources":["/home/praveen/Documents/Praveen-codes/HRM/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Redirect","Login","Home","Addemployee","withSession","Employee","Professionalinformation","Educationinformation","Documents","Employetable","Delete","Updateemployee","Allemployee","Rollbased","Auth","decode","checkAuth","token","localStorage","getItem","console","log","refreshToken","exp","Date","getTime","e","AuthRoute","Component","component","rest","props","pathname","Root","refetch","session"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch , Redirect} from \"react-router-dom\";\nimport Login from \"./component/login/login\";\nimport Home from \"./component/dashboard/home/home\";\n//import CreateEmployee from './component/createEmployee/createEmployee'\nimport Addemployee from \"./component/dashboard/addEmployee/addEmployee\";\nimport withSession from \"./component/withSession\";\nimport Employee from \"./component/dashboard/createEmployee/index\";\nimport Professionalinformation from \"./component/dashboard/employeeProfessionalInfo/index\";\nimport Educationinformation from \"./component/dashboard/employeeEducationInformation/index\";\nimport Documents from \"./component/dashboard/documents/index\";\nimport Employetable from './component/dashboard/allEmployeTable/index';\nimport Delete from './component/dashboard/deleteEmployee/index';\nimport Updateemployee from './component/dashboard/updateEmployee/index'\nimport Allemployee from './component/dashboard/defaultPage/index'\nimport Rollbased from './component/dashboard/rollBased/rollBased';\n\nimport Auth from './Auth';\nimport decode from 'jwt-decode';\n\n// import Layout from './layout/index'\n\nconst checkAuth = () => {\n  const token = localStorage.getItem('token');\n  console.log(\"i am token \", token)\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (!token || !refreshToken) {\n    return false;\n  }\n\n  try {\n    // { exp: 12903819203 }\n    const { exp } = decode(refreshToken);\n\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    checkAuth() ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to={{ pathname: '/login' }} />\n      )\n  )} />\n)\n\n// const fakeAuth = {\n//   isAuthenticated: true,\n//   authenticate(cb){\n//     this.isAuthenticated = true\n//     setTimeout(cb, 100)\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false\n//     setTimeout(cb, 100)\n//   }\n// }\n\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render = {(props) => (\n//     fakeAuth.isAuthenticated === true ? <Component {...props} /> : <Redirect to ={{\n//       pathname: '/',\n//       state:{ from: props.location }\n//     }} />\n\n//   )} />\n\n// )\n\n// class Root extends React.Component {\n//   // state = {\n//   //   loggedIn:false\n//   // }\n\n//   // loginHandle = () => {\n//   //   this.setState(prevState => ({\n//   //    loggedIn: !prevState.loggedIn\n//   //   }))\n//   // }\n\n//   render() {\n//     return (\n//       <div>\n//       <Router>\n//         <Switch>\n//           <Route exact path = \"/\" component={Login}  />\n//           {/* <PrivateRoute path = '/home' component={Home} /> */}\n//         {/*<AuthRoute exact path=\"/Auth\" component={Auth} />*/}\n\n//           <Route path ='/home' component={Home} />\n//           {/* <Route path=\"/home\" render={()=>(\n//           this.state.loggedIn ? ( <Home />) : (<Redirect to='/' />)  /> */}\n//           {/* <Route path=\"/home\" render={({match})=>(this.state.loggedIn ? ( <Home username={match.params.username} />) : (<Redirect to='/' />))}/> */}\n//           <Route path=\"/createEmployee\" component={Employee} />\n//           <Route path=\"/addEmployee\" render={() => <Addemployee />} />\n//           <Route path=\"/employeeProfessionalInfo\"\n//             render={() => <Professionalinformation />}\n//           />\n//           <Route path=\"/employeeEducationInformation\"\n//             render={() => <Educationinformation />}\n//           />\n//           <Route path=\"/documents\" render={() => <Documents />} />\n//           <Route path=\"/allEmployeeTable\" render={() => <Employetable />} />\n//           <Route path=\"/deleteEmployee:_id\" component={Delete} />\n//           <Route path=\"/updateEmployee/:_id\" component={Updateemployee} />\n//           <Route path=\"/defaultPage\" render={() => <Allemployee />} />\n//           <Route path=\"/rollBased\" component={Rollbased} />\n//         </Switch>\n//       </Router>\n//     </div>\n\n//     );\n//   }\n// }\n\nconst Root = ({refetch, session}) => (\n  <div>\n      <Router>\n        <Switch>\n          <Route exact path = \"/\"  render={() => <Login refetch={refetch} />} />\n          {/* <PrivateRoute path = '/home' component={Home} /> */}\n        {/*<AuthRoute exact path=\"/Auth\" component={Auth} />*/}\n\n          <Route path ='/home' component={Home} />\n          {/* <Route path=\"/home\" render={()=>(\n          this.state.loggedIn ? ( <Home />) : (<Redirect to='/' />)  /> */}\n          {/* <Route path=\"/home\" render={({match})=>(this.state.loggedIn ? ( <Home username={match.params.username} />) : (<Redirect to='/' />))}/> */}\n          <Route path=\"/createEmployee\" component={Employee} />\n          <Route path=\"/addEmployee\" render={() => <Addemployee />} />\n          <Route path=\"/employeeProfessionalInfo\"\n            render={() => <Professionalinformation />}\n          />\n          <Route path=\"/employeeEducationInformation\"\n            render={() => <Educationinformation />}\n          />\n          <Route path=\"/documents\" render={() => <Documents />} />\n          <Route path=\"/allEmployeeTable\" render={() => <Employetable />} />\n          <Route path=\"/deleteEmployee:_id\" component={Delete} />\n          <Route path=\"/updateEmployee/:_id\" component={Updateemployee} />\n          <Route path=\"/defaultPage\" render={() => <Allemployee />} />\n          <Route path=\"/rollBased\" component={Rollbased} />\n        </Switch>\n      </Router>\n    </div>\n\n);\n\n//const RootWithSession = withSession(Root);\n\nexport default withSession(Root);\n"]},"metadata":{},"sourceType":"module"}