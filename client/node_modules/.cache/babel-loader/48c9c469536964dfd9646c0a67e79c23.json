{"ast":null,"code":"import _defineProperty from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/praveen/Documents/Praveen-codes/HRM/client/src/component/dashboard/allEmployeTable/index.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Table, Input, Button, Icon, Card, Popconfirm, message } from \"antd\";\nimport './allEmployeTable.css';\nimport Home from \"../home/home\";\nimport { GET_All_EMPLOYEES, GET_EMPLOYEE } from \"../../../queries/index\";\nimport Spinner from \"../../spinner/index\";\nimport { Divider, Tag, notification } from \"antd\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\"; // import SearchBar from '../SearchBar/index';\n\nimport Delete from '../delete/index';\nimport { Mutation, Query } from \"react-apollo\";\nvar Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup;\nvar Search = Input.Search;\n\nvar Employetable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Employetable, _React$Component);\n\n  function Employetable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Employetable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Employetable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      UserId: \"\",\n      search: ''\n    };\n\n    _this.searchInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // console.log(name, value)\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getAuthenticationToken = function () {\n      return localStorage.getItem('token');\n    };\n\n    return _this;\n  }\n\n  _createClass(Employetable, [{\n    key: \"render\",\n    // componentDidMount(){\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Query, {\n        query: GET_All_EMPLOYEES,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: GET_All_EMPLOYEES\n          }];\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        if (loading) return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n        return React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"searchInput\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Search, {\n          placeholder: \"Employee Search\",\n          value: _this2.state.search,\n          name: \"search\",\n          onChange: _this2.searchInputChange,\n          style: {\n            width: 200\n          },\n          enterButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })), React.createElement(Card, {\n          title: \"All Employee\",\n          bordered: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Table, {\n          dataSource: data && data.getAllEmployee && data.getAllEmployee.filter(function (names) {\n            return names.firstName.toLowerCase().indexOf(_this2.state.search.toLocaleLowerCase()) !== -1;\n          }),\n          style: {\n            paddingTop: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(ColumnGroup, {\n          title: \"Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Column, {\n          title: \"First Name\",\n          dataIndex: \"firstName\" // key={id.firstName}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(Column, {\n          title: \"Middile Name\",\n          dataIndex: \"middileName\",\n          key: \"lastName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Column, {\n          title: \"Last Name\",\n          dataIndex: \"lastName\" // key={id.lastName}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(Column, {\n          title: \"Address\",\n          dataIndex: \"address\" // key={id.address}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), React.createElement(Column, {\n          title: \"Action\",\n          key: \"action\",\n          render: function render(text, record) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: \"/updateEmployee/\".concat(record._id),\n                state: {\n                  fromNotifications: true,\n                  userid: record._id\n                }\n              },\n              key: record._id,\n              ref: record._id,\n              params: {\n                userId: record._id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"edit\",\n              theme: \"filled\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }), \"edit\")), React.createElement(Divider, {\n              type: \"vertical\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            }), React.createElement(Link, {\n              to: {\n                pathname: \"/documents/\".concat(record._id),\n                state: {\n                  fromNotifications: true,\n                  userid: record._id\n                }\n              },\n              key: record._id,\n              ref: record._id,\n              params: {\n                userId: record._id\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"file\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }), \"fle\"), React.createElement(Divider, {\n              type: \"vertical\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }), React.createElement(Delete, {\n              id: record._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }, \"Delete\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return Employetable;\n}(React.Component);\n\nexport default withRouter(Employetable);","map":{"version":3,"sources":["/home/praveen/Documents/Praveen-codes/HRM/client/src/component/dashboard/allEmployeTable/index.js"],"names":["React","_","Table","Input","Button","Icon","Card","Popconfirm","message","Home","GET_All_EMPLOYEES","GET_EMPLOYEE","Spinner","Divider","Tag","notification","NavLink","Link","withRouter","Delete","Mutation","Query","Column","ColumnGroup","Search","Employetable","state","UserId","search","searchInputChange","event","target","name","value","setState","getAuthenticationToken","localStorage","getItem","query","data","loading","width","getAllEmployee","filter","names","firstName","toLowerCase","indexOf","toLocaleLowerCase","paddingTop","text","record","pathname","_id","fromNotifications","userid","userId","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { Table, Input, Button, Icon, Card, Popconfirm, message } from \"antd\";\nimport './allEmployeTable.css';\nimport Home from \"../home/home\";\nimport {\n  GET_All_EMPLOYEES,\n  GET_EMPLOYEE\n} from \"../../../queries/index\";\nimport Spinner from \"../../spinner/index\";\nimport { Divider, Tag, notification } from \"antd\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n// import SearchBar from '../SearchBar/index';\nimport Delete from '../delete/index'\nimport { Mutation, Query } from \"react-apollo\";\n\nconst { Column, ColumnGroup } = Table;\nconst Search = Input.Search;\n\nclass Employetable extends React.Component {\n  state = {\n    UserId: \"\",\n    search:'',\n  };\n  // deleteID = deleteEmployee => {\n  //   const confirmDelete = window.confirm(\n  //     \"Are you sure want to delete this Employee?\"\n  //   );\n\n  //   if (confirmDelete) {\n  //     deleteEmployee()\n  //       .then(({ data }) => {\n  //         console.log(data);\n  //         //this.setState({data:data});\n  //       })\n\n  //       .then(() =>\n  //         notification.info({\n  //           message: \"Deleted\",\n  //           description: \"Sucessfully Deleted Employee.\",\n  //           icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n  //         })\n  //       );\n  //   }\n  // };\n\n  searchInputChange=(event)=>{\n    const { name, value } = event.target;\n    // console.log(name, value)\n    this.setState({[name]: value})\n  }\n\n  getAuthenticationToken = () => {\n    return localStorage.getItem('token')\n  }\n  // componentDidMount(){\n    \n  // }\n\n  render() {\n\n    return(\n\n      <Query query={GET_All_EMPLOYEES}   \n      refetchQueries={() => [\n        { query: GET_All_EMPLOYEES }\n      ]}>\n          {({ data, loading }) => {\n            if (loading) return <Spinner />;\n\n              return(\n              <Home >\n                <div className=\"searchInput\">\n                <Search\n                    placeholder=\"Employee Search\"\n                    value={this.state.search}\n                    name=\"search\"\n                    onChange={this.searchInputChange}\n                    style={{ width: 200 }}\n                    enterButton\n                    />\n\n                </div>\n              <Card title=\"All Employee\" bordered={false}>\n               <Table \n                       dataSource={data && data.getAllEmployee && data.getAllEmployee.filter((names) =>{\n                        return names.firstName.toLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1\n                      })} style={{paddingTop:20}}\n                      >\n                        <ColumnGroup title=\"Name\" >\n                          <Column\n                            title=\"First Name\"\n                            dataIndex=\"firstName\"\n                            // key={id.firstName}\n                          />\n\n                          <Column\n\n                            title=\"Middile Name\"\n                            dataIndex=\"middileName\"\n                            key=\"lastName\"\n                          />\n                          <Column\n                            title=\"Last Name\"\n                            dataIndex=\"lastName\"\n                            // key={id.lastName}\n                          />\n                        </ColumnGroup>\n\n                        <Column\n                          title=\"Address\"\n                          dataIndex=\"address\"\n                          // key={id.address}\n                        />\n\n                        <Column\n                          title=\"Action\"\n                          key=\"action\"\n                          render={(text, record) => (\n                            <span>\n                            <span>\n                                <Link\n\n                                  to={{pathname : `/updateEmployee/${record._id}`, state:{\n                                    fromNotifications:true,\n                                    userid:record._id\n                                  }}}\n                                  key={record._id}\n                                  ref ={record._id}\n                                  params= {{userId: record._id}}\n\n                                >\n\n                                  <Icon type=\"edit\" theme=\"filled\" />\n                                  edit\n                                </Link>\n                                  </span>\n\n                              <Divider type=\"vertical\" />\n\n                               <Link\n                               to={{pathname : `/documents/${record._id}`, state:{\n                                 fromNotifications:true,\n                                 userid:record._id\n                               }}}\n                               key={record._id}\n                               ref ={record._id}\n                               params= {{userId: record._id}}\n\n                               >\n\n\n                                <Icon type=\"file\" />\n                                fle\n                              </Link>\n                              <Divider type=\"vertical\" />\n                            \n                              {/* <Button\n                                type=\"primary\"\n                                onClick={() => this.deleteID(deleteEmployee)}\n                              >\n                                <Icon type=\"delete\" />\n                                Delete\n                              </Button> */}\n                              <Delete id={ record._id}>Delete</Delete>\n                            </span>\n                          )}\n                        />\n                     \n                      </Table>\n                    {/* );\n                  }}\n                </Mutation> */}\n              </Card>\n           </Home>\n           )\n    \n          }}\n        </Query>\n   );\n  }\n}\n\nexport default withRouter(Employetable);\n"]},"metadata":{},"sourceType":"module"}