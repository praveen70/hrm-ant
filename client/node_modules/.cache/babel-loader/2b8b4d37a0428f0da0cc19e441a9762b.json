{"ast":null,"code":"import _defineProperty from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/praveen/Documents/Praveen-codes/HRM/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/praveen/Documents/Praveen-codes/HRM/client/src/component/dashboard/rollBased/index.js\";\nimport React from 'react';\nimport { Modal, Button, Input, Form, Select, message, Icon } from 'antd';\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../../queries/index\";\nimport Spinner from '../../spinner/index';\nvar Option = Select.Option;\n\nvar Modals =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modals, _React$Component);\n\n  function Modals(props) {\n    var _this;\n\n    _classCallCheck(this, Modals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modals).call(this, props));\n\n    _this.fieldChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // console.log(name, value)\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e, signupUser) {\n      _this.validate();\n\n      e.preventDefault();\n      signupUser().then(function (data) {\n        _this.setState({\n          confirmLoading: true\n        });\n\n        message.success(\"Sucessfully Created Roll Type\");\n        console.log(\"i am from handle submit\", data);\n      }).catch(function (error) {\n        console.log(error.message);\n        message.error(error.message); // .then(() => message.error(error.message));\n      });\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.validate = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password,\n          rollBased = _this$state.rollBased;\n\n      if (!username) {\n        return false;\n      }\n\n      if (!email) {\n        return false;\n      }\n\n      if (!password) {\n        return false;\n      }\n\n      if (!rollBased) {\n        return false;\n      }\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleChange = function (value) {\n      console.log(\"selected \".concat(value));\n\n      _this.setState({\n        rollBased: value\n      });\n    };\n\n    _this.handleBlur = function () {\n      console.log('blur');\n    };\n\n    _this.handleFocus = function () {\n      console.log('focus');\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      rollBased: '',\n      usernameError: '',\n      // ModalText: 'Content of the modal',\n      // visible: false,\n      confirmLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Modals, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          rollBased = _this$state2.rollBased; // console.log(\"i am dropdown\", this.state.userType)\n\n      var fieldLabels = {\n        name1: \"Username\",\n        name2: \"Email\",\n        name3: \"Password\",\n        name4: \"Roll Based\"\n      };\n      var _this$state3 = this.state,\n          visible = _this$state3.visible,\n          confirmLoading = _this$state3.confirmLoading,\n          ModalText = _this$state3.ModalText;\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlignLast: \"center\",\n          textAlign: \"-moz-initial\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"stong\", {\n        style: {\n          fontFamily: '\"Segoe UI Emoji',\n          color: \"##fa8c16\",\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"You Can Create Here Roll Based Employee\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.icons8.com/office/48/000000/sort-down.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Create Roll Based Employee\"), React.createElement(Mutation, {\n        mutation: SIGNUP_USER,\n        variables: {\n          username: username,\n          email: email,\n          password: password,\n          rollBased: rollBased\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, function (signupUser, _ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(Spinner, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Form, {\n          onSubmit: function onSubmit(event) {\n            return _this2.handleSubmit(event, signupUser);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          className: \"modals\",\n          title: \"Create Roll Based Employee\",\n          visible: _this2.state.visible,\n          onOk: function onOk(e) {\n            return _this2.handleOk(e, signupUser);\n          },\n          onCancel: _this2.handleCancel,\n          disabled: loading || _this2.validate(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: fieldLabels.name1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: function onChange(event) {\n            return _this2.fieldChange(event);\n          },\n          placeholder: \"Username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: fieldLabels.name2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: function onChange(event) {\n            return _this2.fieldChange(event);\n          },\n          placeholder: \"Email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: fieldLabels.name3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: function onChange(event) {\n            return _this2.fieldChange(event);\n          },\n          placeholder: \"Password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, _this2.state.usernameError)), React.createElement(Form.Item, {\n          label: fieldLabels.name4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Select, {\n          defaultValue: \"NONE\",\n          showSearch: true,\n          style: {\n            width: 470\n          },\n          placeholder: \"Select a Roll Type\",\n          optionFilterProp: \"children\",\n          onChange: _this2.handleChange,\n          onFocus: _this2.handleFocus,\n          onBlur: _this2.handleBlur,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(Option, {\n          value: \"admin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Admin\"), React.createElement(Option, {\n          value: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"user\"))))));\n      }));\n    }\n  }]);\n\n  return Modals;\n}(React.Component);\n\nexport default Modals;","map":{"version":3,"sources":["/home/praveen/Documents/Praveen-codes/HRM/client/src/component/dashboard/rollBased/index.js"],"names":["React","Modal","Button","Input","Form","Select","message","Icon","Mutation","SIGNUP_USER","Spinner","Option","Modals","props","fieldChange","event","target","name","value","setState","showModal","visible","handleOk","e","signupUser","validate","preventDefault","then","data","confirmLoading","success","console","log","catch","error","state","username","email","password","rollBased","handleCancel","handleChange","handleBlur","handleFocus","usernameError","fieldLabels","name1","name2","name3","name4","ModalText","textAlignLast","textAlign","fontFamily","color","fontSize","loading","handleSubmit","width","input","option","children","toLowerCase","indexOf","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, Input , Form, Select, message, Icon } from 'antd';\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../../queries/index\";\nimport Spinner from '../../spinner/index';\n\nconst Option = Select.Option;\n\nclass Modals extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      username:'',\n      email:'',\n      password:'',\n      rollBased:'',\n      usernameError:'',\n      // ModalText: 'Content of the modal',\n      // visible: false,\n     confirmLoading: false,\n    }\n  }\n\n  fieldChange=(event)=>{\n    const { name, value } = event.target;\n    // console.log(name, value)\n    this.setState({ [name]:value })\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n  handleOk = (e, signupUser) => {\n      this.validate()\n      e.preventDefault();\n      signupUser().then(data => {\n        this.setState({\n\n      confirmLoading: true,\n    });\n    \n    message.success(\"Sucessfully Created Roll Type\")\n\n     console.log(\"i am from handle submit\",data);\n\n   })\n   .catch(function (error) {\n     console.log(error.message);\n     message.error(error.message)\n     // .then(() => message.error(error.message));\n\n   });\n      this.setState({\n        visible: false,\n      });\n\n\n    }\n\n\n    validate =() =>{\n      const { username, email, password, rollBased } = this.state;\n      if(!username){\n        \n        return false;\n      }\n      if(!email){\n          return false;\n        }\n        if(!password){\n            return false;\n          }\n          if(!rollBased){\n              return false;\n            }\n      }\n\n\n\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  }\n\n handleChange=(value)=>{\n  console.log(`selected ${value}`);\n  this.setState({ rollBased: value})\n}\n\n handleBlur=()=>{\n  console.log('blur');\n}\n\n handleFocus=()=>{\n  console.log('focus');\n}\n\n  render() {\n    let { username, email, password , rollBased } = this.state;\n    // console.log(\"i am dropdown\", this.state.userType)\n\n    const fieldLabels = {\n      name1: \"Username\",\n      name2: \"Email\",\n      name3: \"Password\",\n      name4: \"Roll Based\",\n\n    }\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div className=\"wrapper\">\n          <div  style={{  textAlignLast: \"center\",  textAlign:\"-moz-initial\"}}>\n        <p><stong style={{fontFamily: '\"Segoe UI Emoji', color:\"##fa8c16\", fontSize:\"18px\"}} >You Can Create Here Roll Based Employee\n       \n        </stong></p>\n        {/* <Icon style={{paddingLeft:\"100px\"}} type=\"down-circle\" /> */}\n        <div>\n       \n      \n        <img  src=\"https://img.icons8.com/office/48/000000/sort-down.png\"></img>\n                </div>\n        </div>\n      <Button type=\"primary\" onClick={this.showModal}  >\n        Create Roll Based Employee\n        </Button>\n        <Mutation  mutation={SIGNUP_USER} variables={{username, email, password,rollBased }}>\n        {(signupUser, { data,  loading, error }) => {\n          if (loading) {\n            return <div><Spinner /></div>;\n          }\n\n        return(\n          <div>\n            <Form onSubmit={event => this.handleSubmit(event, signupUser)}>\n\n        <Modal\n        className=\"modals\"\n         title=\"Create Roll Based Employee\"\n         visible={this.state.visible}\n         onOk={e=>this.handleOk(e, signupUser)}\n         onCancel={this.handleCancel}\n         disabled={ loading || this.validate()}\n         >\n\n\n          <Form.Item label={fieldLabels.name1}>\n            <Input type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={event => this.fieldChange(event)}\n           placeholder=\"Username\" />\n          </Form.Item>\n          <Form.Item label={fieldLabels.name2}>\n            <Input type=\"email\"\n            name=\"email\"\n            value={email}\n              onChange={event => this.fieldChange(event)}\n             placeholder=\"Email\" />\n          </Form.Item>\n          <Form.Item label={fieldLabels.name3}>\n            <Input type=\"password\"\n            name=\"password\"\n            value={password}\n              onChange={event => this.fieldChange(event)}\n             placeholder=\"Password\" />\n             <span style={{color:'red'}}>{this.state.usernameError}</span>\n          </Form.Item>\n          <Form.Item label={fieldLabels.name4}>\n          <Select\n          defaultValue=\"NONE\"\n            showSearch\n            style={{ width: 470 }}\n            placeholder=\"Select a Roll Type\"\n            optionFilterProp=\"children\"\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"admin\">Admin</Option>\n            <Option value=\"user\">user</Option>\n\n          </Select>\n          </Form.Item>\n\n         \n\n        </Modal>\n       \n        </Form>\n\n      \n        \n        </div>\n      );\n    }}\n          </Mutation>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Modals;\n"]},"metadata":{},"sourceType":"module"}