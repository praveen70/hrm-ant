{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _supportMatrix = require('./supportMatrix.json');\n\nvar _supportMatrix2 = _interopRequireDefault(_supportMatrix);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar capsRe = /[A-Z]/g;\n\nvar StyleValidator = function () {\n  function StyleValidator(config) {\n    _classCallCheck(this, StyleValidator);\n\n    this.setConfig(config);\n  }\n\n  _createClass(StyleValidator, [{\n    key: 'setConfig',\n    value: function setConfig(config) {\n      this.config = _extends({\n        strict: true,\n        warn: true,\n        platforms: ['gmail', 'gmail-android', 'apple-mail', 'apple-ios', 'yahoo-mail', 'outlook', 'outlook-legacy', 'outlook-web']\n      }, config);\n    }\n  }, {\n    key: 'validate',\n    value: function validate(style, componentName) {\n      var _this = this;\n\n      var _loop = function _loop(propNameCamelCase) {\n        var propName = propNameCamelCase.replace(capsRe, function (match) {\n          return \"-\".concat(match[0].toLowerCase());\n        });\n        var supportInfo = _supportMatrix2.default[propName];\n\n        if (!supportInfo) {\n          if (_this.config.strict) {\n            return {\n              v: new Error(\"Unknown style property `\".concat(propName, \"` supplied to `\").concat(componentName, \"`.\"))\n            };\n          }\n        } else {\n          var unsupported = [];\n          var messages = new Map();\n\n          _this.config.platforms.forEach(function (platform) {\n            if (typeof supportInfo[platform] === 'string') {\n              var msg = supportInfo[platform];\n\n              if (!messages.has(msg)) {\n                messages.set(msg, []);\n              }\n\n              messages.get(msg).push(platform);\n            } else if (supportInfo[platform] === false) {\n              unsupported.push(platform);\n            }\n          });\n\n          if (_this.config.warn) {\n            // eslint-disable-next-line no-restricted-syntax\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = messages[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _ref = _step2.value;\n\n                var _ref2 = _slicedToArray(_ref, 2);\n\n                var msg = _ref2[0];\n                var platforms = _ref2[1];\n                console.warn(\"Warning: Style property `\".concat(propName, \"` supplied to `\").concat(componentName, \"`, in \").concat(platforms.join(', '), \": \").concat(msg.toLowerCase())); // eslint-disable-line no-console\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n\n          if (unsupported.length && _this.config.strict) {\n            return {\n              v: new Error(\"Style property `\".concat(propName, \"` supplied to `\").concat(componentName, \"` unsupported in: \").concat(unsupported.join(', '), \".\"))\n            };\n          }\n        }\n      }; // eslint-disable-next-line no-restricted-syntax\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(style)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var propNameCamelCase = _step.value;\n\n          var _ret = _loop(propNameCamelCase);\n\n          if (typeof _ret === \"object\") return _ret.v;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return StyleValidator;\n}();\n\nexports.default = StyleValidator;","map":null,"metadata":{},"sourceType":"script"}